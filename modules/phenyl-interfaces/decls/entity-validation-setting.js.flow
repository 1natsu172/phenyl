// @flow

import type { Session } from './session.js.flow'
import type { PhenylClient } from './phenyl-client.js.flow'
import type {
  WhereQuery,
  IdQuery,
  IdsQuery,
} from './query.js.flow'
import type {
  InsertCommand,
  UpdateCommand,
  DeleteCommand,
} from './command.js.flow'

export interface EntityValidationSetting {
  find(query: WhereQuery, session: ?Session, client: PhenylClient): Promise<boolean>,
  findOne(query: WhereQuery, session: ?Session, client: PhenylClient): Promise<boolean>,
  get(query: IdQuery, session: ?Session, client: PhenylClient): Promise<boolean>,
  getByIds(query: IdsQuery, session: ?Session, client: PhenylClient): Promise<boolean>,

  insert(command: InsertCommand, session: ?Session, client: PhenylClient): Promise<boolean>,
  insertAndGet(command: InsertCommand, session: ?Session, client: PhenylClient): Promise<boolean>,
  insertAndFetch(command: InsertCommand, session: ?Session, client: PhenylClient): Promise<boolean>,

  update(command: UpdateCommand, session: ?Session, client: PhenylClient): Promise<boolean>,
  updateAndGet(command: UpdateCommand, session: ?Session, client: PhenylClient): Promise<boolean>,
  updateAndFetch(command: UpdateCommand, session: ?Session, client: PhenylClient): Promise<boolean>,
  delete(command: DeleteCommand, session: ?Session, client: PhenylClient): Promise<boolean>,
}

export type EntityValidationSettings = { [entityName: string]: EntityValidationSetting }
