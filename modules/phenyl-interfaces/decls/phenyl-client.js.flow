// @flow
import type {
  WhereQuery,
  IdQuery,
  IdsQuery,
  CustomQuery,
} from './query.js.flow'
import type { Restorable } from './restorable.js.flow' // Object
import type {
  CommandResult,
  CustomCommandResult,
  GetCommandResult,
  FetchCommandResult,
} from './command-result.js.flow'
import type {
  InsertCommand,
  UpdateCommand,
  DeleteCommand,
  CustomCommand,
} from './command.js.flow'

export type CustomQueryResult = {
  result: Object
}

export interface PhenylClient {
  find(query: WhereQuery): Promise<Array<Restorable>>,
  findOne(query: WhereQuery): Promise<Restorable>,
  get(query: IdQuery): Promise<Restorable>,
  getByIds(query: IdsQuery): Promise<Array<Restorable>>,
  fetch(query: CustomQuery): Promise<CustomQueryResult>,

  insert(command: InsertCommand): Promise<CommandResult>,
  insertAndGet(command: InsertCommand): Promise<GetCommandResult>,
  insertAndFetch(command: InsertCommand): Promise<FetchCommandResult>,

  update(command: UpdateCommand): Promise<CommandResult>,
  updateAndGet(command: UpdateCommand): Promise<GetCommandResult>,
  updateAndFetch(command: UpdateCommand): Promise<FetchCommandResult>,

  delete(command: DeleteCommand): Promise<CommandResult>,

  execute(command: CustomCommand): Promise<CustomCommandResult>,
}
